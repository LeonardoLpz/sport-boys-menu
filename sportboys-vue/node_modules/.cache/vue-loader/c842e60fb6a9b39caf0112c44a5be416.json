{"remainingRequest":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonardo/dev/sport-boys-menu/sportboys-vue/src/components/PlatilloCard.vue?vue&type=template&id=26528016&","dependencies":[{"path":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/src/components/PlatilloCard.vue","mtime":1626847055630},{"path":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leonardo/dev/sport-boys-menu/sportboys-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}